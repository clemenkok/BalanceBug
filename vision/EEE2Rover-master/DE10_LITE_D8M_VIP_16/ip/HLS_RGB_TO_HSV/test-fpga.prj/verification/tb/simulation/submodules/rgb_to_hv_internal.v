// (C) 1992-2018 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 

// Generated by Intel(R) HLS Compiler, Version 18.1.0 Build 625

/////////////////////////////////////////////////////////////////
// MODULE rgb_to_hv_internal
/////////////////////////////////////////////////////////////////
module rgb_to_hv_internal
(
   input logic clock,
   input logic resetn,
   input logic [7:0] red,
   input logic [7:0] green,
   input logic [7:0] blue,
   input logic start,
   output logic busy,
   output logic done,
   input logic stall,
   output logic [26:0] returndata
);
   // INST rgb_to_hv_internal of rgb_to_hv_function_wrapper
   rgb_to_hv_function_wrapper rgb_to_hv_internal
   (
      .clock(clock),
      .resetn(resetn),
      .red(red),
      .green(green),
      .blue(blue),
      .start(start),
      .busy(busy),
      .done(done),
      .stall(stall),
      .returndata(returndata)
   );

endmodule

