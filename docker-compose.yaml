version: '3.8'
networks:
    app-tier:
        driver: bridge
services:

  # NGiNX Reverse Proxy
  reverseproxy:
        image: reverseproxy
        ports:
            - 80:80
        networks:
        - app-tier
        depends_on:
          - website

  # Node.js application
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      mysql:
        condition: service_healthy
    networks:
        - app-tier
    volumes:
      - ./website:/app
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=123456
      - DB_NAME=testdb
      
  # MySQL database
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=testdb
    volumes:
      - ./mysql/data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      timeout: 10s
      retries: 3
    networks:
        - app-tier

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    networks:
        - app-tier